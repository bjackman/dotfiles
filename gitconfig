[user]
	email = jackmanb@chromium.org
	name = Brendan Jackman
[core]
	preloadindex = true
	excludesfile = /home/brendan/dotfiles/global_gitignore
[push]
	default = upstream
[alias]
	rbm = rebase -i master
	lgg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lg = log --color --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lg2 = log --color -n 20 --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lg5 = log --color -n 5 --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	lg10 = log --color -n 10 --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	showtool = "!sh -c 'if [ -z $1 ]; then REVISION=HEAD; else REVISION=$1; fi; git difftool --dir-diff $REVISION~ $REVISION' -"
	# https://stackoverflow.com/questions/8475448/find-merge-commit-which-includes-a-specific-commit
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	uncommit = reset HEAD@{1}
[diff]
	renames = copies
	mnemonicprefix = false
	wsErrorHighlight = all
	tool = meld
[help]
	autocorrect = 3
[color]
	ui = true
[rebase]
	autosquash = true
[branch]
	autosetuprebase = always
[gitreview]
	remote = origin
[rerere]
	enabled = 1
	autoupdate = true
[include]
	path = ~/.local_gitconfig
[sendemail]
	From = Brendan Jackman <jackmanb@chromium.org>
	smtpServer = /tmp/sendgmail
	smtpServerOption = -sender=jackmanb@chromium.org
	confirm = always

[http]
	cookiefile = /home/brendan/.gitcookies
[credential]
	helper = libsecret

[url "sso://user"]
 	 insteadof = https://user.git.corp.google.com
[checkout]
 	workers = 0  # use num_cpu
